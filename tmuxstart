#!/bin/sh

sessiondir=${TMUXSTART_DIR:-$HOME/.tmuxstart}

# local functions

# Print _usage information if there's not enough arguments
_usage() {
    local ts_name
    ts_name=$(basename $0)
    echo "Usage: ${ts_name} [OPTIONS] SESSION\n"
    echo "Launch reusable configurations for named tmux sessions.\n"
    echo "Options:\n"
    echo "-h Print help menu"
    echo "-l List all available session files"
    echo "-o Open/Create session file for editing"
}

[ $# -lt 1 ] && _usage && exit 1

_open_session_file() {
    local session_file session_example
    # TODO: add option to select example file
    session_example="
    # Make an htop window make a regular shell window\n
    new_session -n htop htop\n
    new_window\n
    "
    session_file="${sessiondir}/${OPTARG}"

    if [ ! -f $session_file ]; then
        # EDITOR not explicitly set or uses vim
        if [ -z "$EDITOR" -o "$EDITOR" = 'vi' -o "$EDITOR" = 'vim' ]; then
            # create a buffer with dummy content in $TMUXSTART_DIR
            echo "${session_example}" | ${EDITOR:-vi} - +"file ${session_file}"
        else
            echo "${session_example}" > $session_file;
            $EDITOR $session_file
        fi
    else
        ${EDITOR:-vi} $session_file
    fi
}

_list_session_files(){
    \ls  $sessiondir ; exit 0
}

# arguments parsing loop
while getopts ':hlo:' option; do
    case "${option}" in
        h)
            _usage ; exit 0 ;;
        l)
            _list_session_files ;;
        o)
            _open_session_file ; exit 0 ;;
        :)
            echo "Option -$OPTARG requires an argument."
            _usage ; exit 1 ;;
        *)
            echo "Invalid option"
            _usage ; exit 1 ;;
    esac
done

# Some helper functions for simpler session files
new_session() {
    # Set default path based on $path variable if defined
    [ "$path" ] && cd "$path"
    tmux new-session -d -s $session "$@"
    [ "$path" ] && set_path "$path"
}
new_window() { tmux new-window -d -t $session "$@"; }
rename() { tmux rename-window -t $session:"$@"; }
kill_window() { tmux kill-window -t $session:"$@"; }
select_pane() { tmux select-pane -t $session:"$@"; }
select_window() { tmux select-window -t $session:"$@"; }
select_layout() { tmux select-layout -t $session:"$@"; }
send_keys() { tmux send-keys -t $session:"$@"; }
send_line() { send_keys "$@" "Enter"; }
set_env() { tmux set-environment -t $session "$@"; }
set_path() { tmux set-option -t $session default-path "$@"; }
split() { tmux split-window -t $session:"$@"; }
swap() { tmux swap-pane -t $session:"$@"; }

session=$1
TMUX_OLD=$TMUX
TMUX=
if ! tmux has-session -t $session ; then
    if [ -f "$sessiondir/$1" ] ; then
        . "$sessiondir/$1"
    else
        tmux new-session -d -s $session
    fi
fi
if [ "$TMUX_OLD" = "" ]; then
    tmux attach-session -t $session
else
    tmux switch-client -t $session
fi
TMUX=$TMUX_OLD
