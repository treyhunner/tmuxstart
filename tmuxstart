#!/bin/sh

sessiondir=${TMUXSTART_DIR:-$HOME/.tmuxstart}

# TODO: figure out where to put example session
sessionexample="
# Make an htop window make a regular shell window\n
new_session -n htop htop\n
new_window\n
"

# Print usage information if there's not exactly 1 argument
usage() {
    # TODO: print all available options
    echo "Usage: $(basename $0) tmux-session"
    exit 1
}

# no arguments received
[ $# -eq 0 ] && usage

while getopts ':hlc:o:d:' option; do
    case "${option}" in
        h)
            usage ;;
        l)
            ls -1 $sessiondir; exit 0 ;;
        c)
            [ -f "./$OPTARG" -a ! -f "${sessiondir}/${OPTARG}" ] && ln -s "$PWD/$OPTARG" $sessiondir && exit 0;
            exit 1
            ;;
        o)
            sessionfile="${sessiondir}/${OPTARG}"
            if [ ! -f $sessionfile ]; then
                # EDITOR not explicitly set or uses vim
                # create a buffer with dummy content in $TMUXSTART_DIR
                if [ -z "$EDITOR" -o "$EDITOR" = 'vi' -o "$EDITOR" = 'vim' ]; then
                    echo "${sessionexample}" | ${EDITOR:-vi} - +"file ${sessionfile}"
                else
                    echo "${sessionexample}" > $sessionfile;
                    $EDITOR $sessionfile
                fi
            else
                ${EDITOR:-vi} $sessionfile
            fi
            exit 0
            ;;
        d)
            sessionfile="${sessiondir}/${OPTARG}"
            if [ -f $sessionfile ]; then
                echo "Are you sure you want to remove \"${OPTARG}\"? [y/N]"
                read confirm
                [ $confirm = 'y' ] && rm -v $sessionfile
            else
                echo "Session file for \"${OPTARG}\" not found."
            fi
            exit
            ;;
        *)
            echo "Invalid option"
            usage
            ;;
    esac
done

# Some helper functions for simpler session files
new_session() {
    # Set default path based on $path variable if defined
    [ "$path" ] && cd "$path"
    tmux new-session -d -s $session "$@"
    [ "$path" ] && set_path "$path"
}
new_window() { tmux new-window -d -t $session "$@"; }
rename() { tmux rename-window -t $session:"$@"; }
kill_window() { tmux kill-window -t $session:"$@"; }
select_pane() { tmux select-pane -t $session:"$@"; }
select_window() { tmux select-window -t $session:"$@"; }
select_layout() { tmux select-layout -t $session:"$@"; }
send_keys() { tmux send-keys -t $session:"$@"; }
send_line() { send_keys "$@" "Enter"; }
set_env() { tmux set-environment -t $session "$@"; }
set_path() { tmux set-option -t $session default-path "$@"; }
split() { tmux split-window -t $session:"$@"; }
swap() { tmux swap-pane -t $session:"$@"; }

# normal session management
session=$1
TMUX_OLD=$TMUX
TMUX=
if ! tmux has-session -t $session ; then
    if [ -f "./$session" ]; then
            . "./$session"
    else
        if [ -f "$sessiondir/$session" ] ; then
            cd $sessiondir
            [ -h "./$session" ] && cd $(dirname $(readlink "$session"))
            . "./$session"
        else
            tmux new-session -d -s $session
        fi
    fi
fi
if [ "$TMUX_OLD" = "" ]; then
    tmux attach-session -t $session
else
    tmux switch-client -t $session
fi
TMUX=$TMUX_OLD
